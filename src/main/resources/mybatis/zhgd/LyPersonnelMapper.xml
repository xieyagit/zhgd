<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hujiang.project.zhgd.lyPersonnel.mapper.LyPersonnelMapper">
    
    <resultMap type="LyPersonnel" id="LyPersonnelResult">
        <result property="id"    column="id"    />
        <result property="empName"    column="emp_name"    />
        <result property="idCode"    column="id_code"    />
        <result property="empPhon"    column="emp_phon"    />
        <result property="empSex"    column="emp_sex"    />
        <result property="empNation"    column="emp_nation"    />
        <result property="idAddress"    column="id_address"    />
        <result property="idAgency"    column="id_agency"    />
        <result property="idValiddate"    column="id_validdate"    />
        <result property="dateOfBirth"    column="date_of_birth"    />
        <result property="faceUrl"    column="face_url"    />
        <result property="idphotoScan"    column="idphoto_scan"    />
        <result property="idphotoScan2"    column="idphoto_scan2"    />
        <result property="pid"    column="pid"    />
        <result property="companyId"    column="company_id"    />
        <result property="subordinate"    column="subordinate"    />
        <result property="ispresent"    column="ispresent"    />
        <result property="type"    column="type"    />
        <result property="bz"    column="bz"    />
        <result property="companyName"    column="companyName"    />
        <result property="floor"    column="floor"    />
        <result property="isBlacklist"    column="isBlacklist"    />
        <result property="empNumber"    column="emp_number"    />
        <result property="typeName"    column="type_name"    />
    </resultMap>
	
	<sql id="selectLyPersonnelVo">
        select type_name,emp_number,isBlacklist,companyName,floor,id, emp_name, id_code, emp_phon, emp_sex, emp_nation, id_address, id_agency, id_validdate, date_of_birth, face_url, idphoto_scan, idphoto_scan2, pid, company_id, subordinate, ispresent, type, bz from ly_personnel
    </sql>
	
    <select id="selectLyPersonnelList" parameterType="LyPersonnel" resultMap="LyPersonnelResult">
        <include refid="selectLyPersonnelVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="empName != null  and empName != '' "> and emp_name like '%${empName}%'</if>
             <if test="idCode != null  and idCode != '' "> and id_code = #{idCode}</if>
             <if test="empPhon != null  and empPhon != '' "> and emp_phon = #{empPhon}</if>
             <if test="empSex != null  and empSex != '' "> and emp_sex = #{empSex}</if>
             <if test="empNation != null  and empNation != '' "> and emp_nation = #{empNation}</if>
             <if test="idAddress != null  and idAddress != '' "> and id_address = #{idAddress}</if>
             <if test="idAgency != null  and idAgency != '' "> and id_agency = #{idAgency}</if>
             <if test="idValiddate != null  and idValiddate != '' "> and id_validdate = #{idValiddate}</if>
             <if test="dateOfBirth != null  and dateOfBirth != '' "> and date_of_birth = #{dateOfBirth}</if>
             <if test="faceUrl != null  and faceUrl != '' "> and face_url = #{faceUrl}</if>
             <if test="idphotoScan != null  and idphotoScan != '' "> and idphoto_scan = #{idphotoScan}</if>
             <if test="idphotoScan2 != null  and idphotoScan2 != '' "> and idphoto_scan2 = #{idphotoScan2}</if>
             <if test="pid != null "> and pid = #{pid}</if>
             <if test="companyId != null "> and company_id = #{companyId}</if>
             <if test="subordinate != null  and subordinate != '' "> and subordinate = #{subordinate}</if>
             <if test="ispresent != null  and ispresent != '' "> and ispresent = #{ispresent}</if>
             <if test="type != null  and type != '' "> and type = #{type}</if>
             <if test="bz != null  and bz != '' "> and bz = #{bz}</if>
             <if test="isBlacklist != null  and isBlacklist != '' "> and isBlacklist = #{isBlacklist}</if>

             <if test="floor != null  and floor != '' "> and floor like '%${floor}%'</if>
             <if test="companyName != null  and companyName != '' "> and companyName like '%${companyName}%'</if>
             <if test="empNumber != null  and empNumber != '' "> and emp_number = #{empNumber}</if>
             <if test="typeName != null  and typeName != '' "> and type_name = #{typeName}</if>
         </where>
         order by id desc
    </select>
    
    <select id="selectLyPersonnelById" parameterType="Integer" resultMap="LyPersonnelResult">
        <include refid="selectLyPersonnelVo"/>
        where id = #{id}
    </select>
    <!--在职人员总数-->
    <select id="zzryzs" parameterType="Integer" resultType="Integer">
        select count(id) from ly_personnel
        where pid = #{pid} and ispresent='0' and type='1'
    </select>
    <!--在职人员进入数-->
    <select id="zzryin" parameterType="LyAttendanceRecord" resultType="Integer">
select count(d.id) from (select r.id from ly_attendance_record  r left join ly_personnel p on r.employee_id=p.id where r.project_id=#{projectId} and r.direction='in' and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime})  and p.ispresent='0' and p.type='1' GROUP BY r.employee_id) d
    </select>
    <!--在职人员进出数-->
    <select id="zzryinout" parameterType="LyAttendanceRecord" resultType="Integer">
select count(d.id) from (select r.id from ly_attendance_record  r left join ly_personnel p on r.employee_id=p.id where r.project_id=#{projectId}  and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime})  and p.ispresent='0' and p.type='1' GROUP BY r.employee_id) d
    </select>
    <!--在职人员出去数-->
    <select id="zzryout" parameterType="LyAttendanceRecord" resultType="Integer">
select count(d.id) from (select r.id from ly_attendance_record  r left join ly_personnel p on r.employee_id=p.id where r.project_id=#{projectId} and r.direction='out' and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime})  and p.ispresent='0' and p.type='1' GROUP BY r.employee_id) d
      </select>
    <!--访客人员总数-->
    <select id="fkryzs" parameterType="LyAttendanceRecord" resultType="Integer">

select count(id) from ly_registration_record where pid=#{projectId} and type='2' and TO_DAYS(time)=TO_DAYS(#{passedTime})
    </select>
     <!--访客人员进入数-->
    <select id="fkryin" parameterType="LyAttendanceRecord" resultType="Integer">

select count(d.id) from (select r.id from ly_attendance_record r where r.employee_id in (select p.pwid from ly_registration_record p where p.pid=#{projectId} and p.type='2' and TO_DAYS(p.time)=TO_DAYS(#{passedTime})) and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime}) and r.direction='in' GROUP BY r.employee_id) d
    </select>
    <!--访客人员进出数-->
    <select id="fkryinout" parameterType="LyAttendanceRecord" resultType="Integer">

select count(d.id) from (select r.id from ly_attendance_record r where r.employee_id in (select p.pwid from ly_registration_record p where p.pid=#{projectId} and p.type='2' and TO_DAYS(p.time)=TO_DAYS(#{passedTime})) and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime})  GROUP BY r.employee_id) d
    </select>
    <!--访客人员出去数-->
    <select id="fkryout" parameterType="LyAttendanceRecord" resultType="Integer">

select count(d.id) from (select r.id from ly_attendance_record r where r.employee_id in (select p.pwid from ly_registration_record p where p.pid=#{projectId} and p.type='2' and TO_DAYS(p.time)=TO_DAYS(#{passedTime})) and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime}) and r.direction='out' GROUP BY r.employee_id) d
    </select>
    <insert id="insertLyPersonnel" parameterType="LyPersonnel">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ly_personnel
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null  ">id,</if>
			<if test="empName != null  and empName != ''  ">emp_name,</if>
			<if test="idCode != null  and idCode != ''  ">id_code,</if>
			<if test="empPhon != null  and empPhon != ''  ">emp_phon,</if>
			<if test="empSex != null  and empSex != ''  ">emp_sex,</if>
			<if test="empNation != null  and empNation != ''  ">emp_nation,</if>
			<if test="idAddress != null  and idAddress != ''  ">id_address,</if>
			<if test="idAgency != null  and idAgency != ''  ">id_agency,</if>
			<if test="idValiddate != null  and idValiddate != ''  ">id_validdate,</if>
			<if test="dateOfBirth != null  and dateOfBirth != ''  ">date_of_birth,</if>
			<if test="faceUrl != null  and faceUrl != ''  ">face_url,</if>
			<if test="idphotoScan != null  and idphotoScan != ''  ">idphoto_scan,</if>
			<if test="idphotoScan2 != null  and idphotoScan2 != ''  ">idphoto_scan2,</if>
			<if test="pid != null  ">pid,</if>
			<if test="companyId != null  ">company_id,</if>
			<if test="subordinate != null  and subordinate != ''  ">subordinate,</if>
			<if test="ispresent != null  and ispresent != ''  ">ispresent,</if>
			<if test="type != null  and type != ''  ">type,</if>
			<if test="bz != null  and bz != ''  ">bz,</if>
			<if test="companyName != null  and companyName != ''  ">companyName,</if>
			<if test="floor != null  and floor != ''  ">floor,</if>
			<if test="empNumber != null  and empNumber != ''  ">emp_number,</if>
			<if test="typeName != null  and typeName != ''  ">type_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null  ">#{id},</if>
			<if test="empName != null  and empName != ''  ">#{empName},</if>
			<if test="idCode != null  and idCode != ''  ">#{idCode},</if>
			<if test="empPhon != null  and empPhon != ''  ">#{empPhon},</if>
			<if test="empSex != null  and empSex != ''  ">#{empSex},</if>
			<if test="empNation != null  and empNation != ''  ">#{empNation},</if>
			<if test="idAddress != null  and idAddress != ''  ">#{idAddress},</if>
			<if test="idAgency != null  and idAgency != ''  ">#{idAgency},</if>
			<if test="idValiddate != null  and idValiddate != ''  ">#{idValiddate},</if>
			<if test="dateOfBirth != null  and dateOfBirth != ''  ">#{dateOfBirth},</if>
			<if test="faceUrl != null  and faceUrl != ''  ">#{faceUrl},</if>
			<if test="idphotoScan != null  and idphotoScan != ''  ">#{idphotoScan},</if>
			<if test="idphotoScan2 != null  and idphotoScan2 != ''  ">#{idphotoScan2},</if>
			<if test="pid != null  ">#{pid},</if>
			<if test="companyId != null  ">#{companyId},</if>
			<if test="subordinate != null  and subordinate != ''  ">#{subordinate},</if>
			<if test="ispresent != null  and ispresent != ''  ">#{ispresent},</if>
			<if test="type != null  and type != ''  ">#{type},</if>
			<if test="bz != null  and bz != ''  ">#{bz},</if>
			<if test="companyName != null  and companyName != ''  ">#{companyName},</if>
			<if test="floor != null  and floor != ''  ">#{floor},</if>
			<if test="empNumber != null  and empNumber != ''  ">#{empNumber},</if>
			<if test="typeName != null  and typeName != ''  ">#{typeName},</if>
         </trim>
    </insert>
	 
    <update id="updateLyPersonnel" parameterType="LyPersonnel">
        update ly_personnel
        <trim prefix="SET" suffixOverrides=",">
            <if test="empName != null  and empName != ''  ">emp_name = #{empName},</if>
            <if test="idCode != null  and idCode != ''  ">id_code = #{idCode},</if>
            <if test="empPhon != null  and empPhon != ''  ">emp_phon = #{empPhon},</if>
            <if test="empSex != null  and empSex != ''  ">emp_sex = #{empSex},</if>
            <if test="empNation != null  and empNation != ''  ">emp_nation = #{empNation},</if>
            <if test="idAddress != null  and idAddress != ''  ">id_address = #{idAddress},</if>
            <if test="idAgency != null  and idAgency != ''  ">id_agency = #{idAgency},</if>
            <if test="idValiddate != null  and idValiddate != ''  ">id_validdate = #{idValiddate},</if>
            <if test="dateOfBirth != null  and dateOfBirth != ''  ">date_of_birth = #{dateOfBirth},</if>
            <if test="faceUrl != null  and faceUrl != ''  ">face_url = #{faceUrl},</if>
            <if test="idphotoScan != null  and idphotoScan != ''  ">idphoto_scan = #{idphotoScan},</if>
            <if test="idphotoScan2 != null  and idphotoScan2 != ''  ">idphoto_scan2 = #{idphotoScan2},</if>
            <if test="pid != null  ">pid = #{pid},</if>
            <if test="companyId != null  ">company_id = #{companyId},</if>
            <if test="subordinate != null  and subordinate != ''  ">subordinate = #{subordinate},</if>
            <if test="ispresent != null  and ispresent != ''  ">ispresent = #{ispresent},</if>
            <if test="type != null  and type != ''  ">type = #{type},</if>
            <if test="bz != null  and bz != ''  ">bz = #{bz},</if>
            <if test="companyName != null  and companyName != ''  ">companyName = #{companyName},</if>
            <if test="floor != null  and floor != ''  ">floor = #{floor},</if>
            <if test="empNumber != null  and empNumber != ''  ">emp_number = #{empNumber},</if>
            <if test="typeName != null  and typeName != ''  ">type_name = #{typeName},</if>

        </trim>
        where id = #{id}
    </update>

	<delete id="deleteLyPersonnelById" parameterType="Integer">
        delete from ly_personnel where id = #{id}
    </delete>
	
    <delete id="deleteLyPersonnelByIds" parameterType="String">
        delete from ly_personnel where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <resultMap type="LyCompanyPersonnel" id="getLyCompanyPersonnelResult">

        <result property="id"    column="cid"    />
        <result property="companyName"    column="company_name"    />
        <collection property="pList" ofType="LyPersonnel"  >
            <result property="id"    column="plid"    />
            <result property="empName"    column="emp_name"    />
            <result property="faceUrl"    column="face_url"    />
            <result property="subordinate"    column="subordinate"    />
        </collection>
    </resultMap>
    <select id="getLyCompanyPersonnel" parameterType="LyPersonnel"  resultMap="getLyCompanyPersonnelResult">


    select c.id cid,c.company_name,p.id plid,p.emp_name,p.face_url,p.subordinate from ly_company c RIGHT JOIN ly_personnel p on c.id=p.company_id
    where c.pid=#{pid} and p.type=1 and p.ispresent=0
        <if test="empName != null  and empName != '' "> and p.emp_name like  '%${empName}%'</if>


    </select>
    <resultMap type="LyPersonnelRecord" id="getLyPersonnelRecordResult">

        <result property="id"    column="id"    />
        <result property="empName"    column="emp_name"    />
        <result property="faceUrl"    column="face_url"    />
        <collection property="larList" ofType="LyAttendanceRecord"  >
            <result property="direction"    column="direction"    />
            <result property="temperature"    column="temperature"    />
            <result property="passedTime"    column="passed_time"    />
        </collection>
    </resultMap>
    <select id="getLyPersonnelRecordZZ" parameterType="LyAttendanceRecord"  resultMap="getLyPersonnelRecordResult">


select p.emp_name,p.face_url,p.id,DATE_FORMAT(r.passed_time, '%H:%i:%s') passed_time,r.temperature,r.direction
from ly_attendance_record r left join ly_personnel p on p.id=r.employee_id
where r.project_id=#{projectId} and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime}) and p.type='1' and ispresent='0' GROUP BY r.direction ORDER BY r.id

    </select>
    <select id="getLyPersonnelRecordFK" parameterType="LyAttendanceRecord"  resultMap="getLyPersonnelRecordResult">


select p.emp_name,p.face_url,p.id,DATE_FORMAT(r.passed_time, '%H:%i:%s') passed_time,r.temperature,r.direction
from ly_attendance_record r left join ly_personnel p on p.id=r.employee_id
where r.project_id=#{projectId} and TO_DAYS(r.passed_time)=TO_DAYS(#{passedTime}) and p.type='2'
and p.id in (select t.pwid from ly_registration_record t where t.pid=4 and  t.type='2' and TO_DAYS(t.time)=TO_DAYS(#{passedTime}) )
GROUP BY r.direction ORDER BY r.id

    </select>
    <update id="insertBlacklist" parameterType="String">
        update ly_personnel
        set isBlacklist='1'
        where id in (${ids})
    </update>
    <update id="deleteBlacklist" parameterType="String">
        update ly_personnel
        set isBlacklist='0'
        where id in (${ids})
    </update>
</mapper>